{"config":{"lang":["en","ru"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\u0411\u044b\u0441\u0442\u0440\u044b\u0439 \u0441\u0442\u0430\u0440\u0442","text":"<p>\u0421\u0430\u043c\u044b\u0439 \u043f\u0440\u043e\u0441\u0442\u043e\u0439 \u043f\u0440\u0438\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0439 \u0431\u043e\u0442</p> <pre><code>from vkpybot import Bot\n\n\nbot = Bot(api_token)\n\n@bot.command('\u041f\u0440\u0438\u0432\u0435\u0442')\ndef greet(message):\n    return '\u041f\u0440\u0438\u0432\u0435\u0442'\n\nbot.start()\n</code></pre>"},{"location":"tutorial/","title":"\u0422\u0443\u0442\u043e\u0440\u0438\u0430\u043b","text":"<p>Short tutorial to create and run simple bot</p>"},{"location":"tutorial/#_2","title":"\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430","text":"pipPoetry <pre><code>pip install vkpybot\n</code></pre> <pre><code>poetry add vkpybot\n</code></pre>"},{"location":"tutorial/#_3","title":"\u0418\u043c\u043f\u043e\u0440\u0442","text":"<pre><code>import vkpybot as vk\n</code></pre>"},{"location":"tutorial/#_4","title":"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u0431\u043e\u0442\u0430","text":"<pre><code>import vkpybot as vk\ntoken = \"VK_API_TOKEN\"\nbot = vk.Bot(access_token=token)\n</code></pre>"},{"location":"tutorial/#_5","title":"\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b","text":"<pre><code>import asyncio\nimport vkpybot as vk\ntoken = \"VK_API_TOKEN\"\nbot = vk.Bot(access_token=token)\n@bot.command\nasync def timer(message: vk.Message, minutes: int):\nawait message.reply(f'Timer set for {minutes} minutes')\nawait asyncio.sleep(minutes * 60)\nreturn 'Timer finished'\n</code></pre>"},{"location":"tutorial/#_6","title":"\u0417\u0430\u043f\u0443\u0441\u043a \u0431\u043e\u0442\u0430","text":"<pre><code>import asyncio\nimport vkpybot as vk\ntoken = \"VK_API_TOKEN\"\nbot = vk.Bot(access_token=token)\n@bot.command\nasync def timer(message: vk.Message, minutes: int):\nawait bot.session.reply(message, f'Timer set for {minutes} minutes')\nawait asyncio.sleep(minutes * 60)\nreturn 'Timer finished'\nbot.start()\n</code></pre>"},{"location":"documentation/bot/","title":"\u0411\u043e\u0442","text":"<p><code>Bot</code> - \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 \u043a\u043b\u0430\u0441\u0441</p>"},{"location":"documentation/bot/#_2","title":"\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b","text":"<ul> <li><code>access_token: str</code> - \u0442\u043e\u043a\u0435\u043d \u0434\u043b\u044f \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u043a API \u0412\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u0435</li> <li><code>bot_admin: int</code> - \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0441 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u043c\u0438 \u043f\u0440\u0430\u0432\u0430\u043c\u0438 \u0434\u043e\u0441\u0442\u0443\u043f\u0430</li> <li><code>session</code> - <code>GroupSession</code> object to access api (will be created automatically if not passed)</li> <li><code>event_server</code> - <code>CallBackServer</code> or <code>LongPollServer</code> that will pass events to bot (LongPollServer will bew created automatically)</li> <li><code>log_file</code> - name of log_file (will bew created at /log directory)</li> <li><code>log_level</code></li> </ul>"},{"location":"documentation/bot/#commands","title":"Commands","text":"<p><code>Bot.command()</code> - decorator for the functions that will be converted to a <code>Command</code> object</p>"},{"location":"documentation/bot/#parameters","title":"Parameters","text":"<ul> <li><code>name</code> - the main name of command (by default the name of function)</li> <li><code>aliases</code> - the alternative names of command</li> <li><code>access_level</code> - the minimum access level of access to run command</li> <li><code>message_if_deny</code> - string, that will be replied to message, if access_level less then <code>access_level</code></li> <li><code>use_doc</code> - weather or not use the documentation of function in auto-generated documentation</li> </ul> <p>Commands can be declared both synchronous and asynchronous</p> <pre><code>bot.command()\ndef hi():\n    return 'Hi!'\n\nbot.command()\nasync def bye():\n    return 'Bye-bye!'\n</code></pre> <p>You can add <code>message</code> argument to the command-function to gain access to the message, that called the command</p> <pre><code>bot.command()\ndef hi(message):\n    return f'Hi, {message.sender}!'\n</code></pre> <p>Framework will automatically use the returned string as text of message to reply and ignore all other returned objects (including None)</p>"},{"location":"documentation/bot/#accesslevel","title":"AccessLevel","text":"<p>There are 3 access levels now</p> <ol> <li>USER - every user in conversations</li> <li>ADMIN - admins of conversation and any user in private chat with bot</li> <li>BOT_ADMIN - user, that was declared as <code>bot_admin</code></li> </ol>"},{"location":"documentation/bot/#regex-experimental","title":"Regex (Experimental)","text":"<p>You can write functions, that will be automatically called if message matches given pattern</p> <pre><code>bot.regex('.*hi.*')\nasync def regex_hi(message):\n    await message.reply('Your message contains hi')\n</code></pre>"},{"location":"documentation/command/","title":"Command","text":"<p>\u0427\u0442\u043e\u0431\u044b \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0431\u043e\u0442\u0443 \u043a\u043e\u043c\u0430\u043d\u0434\u0443, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u0434\u0435\u043a\u043e\u0440\u0430\u0442\u043e\u0440<code>@bot.command()</code></p> <pre><code>@bot.command()\ndef command():\nreturn \"\u041a\u043e\u043c\u0430\u043d\u0434\u0430 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0430\"\n</code></pre>"},{"location":"documentation/command/#_1","title":"\u0418\u043c\u0435\u043d\u0430 \u0438 \u0441\u043e\u043a\u0440\u0430\u0449\u0435\u043d\u0438\u044f","text":"<p>\u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u043a\u043e\u043c\u0430\u043d\u0434\u044b. \u041a\u043e\u043c\u0430\u043d\u0434\u0443 \u043c\u043e\u0436\u043d\u043e \u0432\u044b\u0437\u0432\u0430\u0442\u044c \u043d\u0430\u043f\u0438\u0441\u0430\u0432 \u0432 \u0447\u0430\u0442\u0435 <code>/command</code></p> <p>\u041a\u043e\u043c\u0430\u043d\u0434\u0435 \u043c\u043e\u0436\u043d\u043e \u0437\u0430\u0434\u0430\u0442\u044c \u043a\u0430\u0441\u0442\u043e\u043c\u043d\u043e\u0435 \u0438\u043c\u044f, \u043f\u0435\u0440\u0435\u0434\u0430\u0432 \u0432 \u0434\u0435\u043a\u043e\u0440\u0430\u0442\u043e\u0440 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 <code>name (str)</code> \u0427\u0442\u043e\u0431\u044b \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0431\u043e\u043b\u0435\u0435 \u043e\u0434\u043d\u043e\u0433\u043e \u0438\u043c\u0435\u043d\u0438 \u043a\u043e\u043c\u0430\u043d\u0434\u0435, \u043d\u0430\u0434\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 <code>names (list[str])</code></p> <p>\u0412\u0430\u0436\u043d\u043e: \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 <code>names</code> \u043d\u0435 \u043f\u0435\u0440\u0435\u0437\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u0438\u043c\u044f \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e. \u0415\u0441\u043b\u0438 \u0432\u044b \u043d\u0435 \u0445\u043e\u0442\u0438\u0442\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u043a\u0430\u043a \u043e\u0434\u043e \u0438\u0437 \u0438\u043c\u0451\u043d \u043a\u043e\u043c\u0430\u043d\u0434\u044b, \u0432\u0430\u043c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0443\u043a\u0430\u0437\u0430\u0442\u044c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 <code>name</code></p> <pre><code>#  \u043a\u043e\u043c\u0430\u043d\u0434\u044b \u0441 \u0438\u043c\u0435\u043d\u0435\u043c \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e\n@bot.command()\ndef start():\nreturn '\u0421\u0442\u0430\u0440\u0442'\n# \u043a\u043e\u043c\u0430\u043d\u0434\u0430 \u0441 \u043a\u0430\u0441\u0442\u043e\u043c\u043d\u044b\u043c \u0438\u043c\u0435\u043d\u0435\u043c\n@bot.command(name='\u043f\u0440\u0438\u0432\u0435\u0442')\ndef hi():\nreturn '\u041f\u0440\u0438\u0432\u0435\u0442, \u043c\u0438\u0440!'\n# \u043a\u043e\u043c\u0430\u043d\u0434\u0430 \u0441 \u0438\u043c\u0435\u043d\u0435\u043c \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0438 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c\u0438 \u0438\u043c\u0435\u043d\u0430\u043c\u0438\n@bot.command(names=['\u043a\u043e\u043d\u0435\u0446', '\u0441\u0442\u043e\u043f'])\ndef stop():\nreturn '\u041a\u043e\u043d\u0435\u0446'\n# \u043a\u043e\u043c\u0430\u043d\u0434\u0430 \u0441 \u0438\u043c\u0435\u043d\u0435\u043c \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0438 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c\u0438 \u0438\u043c\u0435\u043d\u0430\u043c\u0438\n@bot.command(name='\u0441\u0442\u043e\u043f', names=['\u043a\u043e\u043d\u0435'])\ndef stop():\nreturn '\u041a\u043e\u043d\u0435\u0446'\n</code></pre>"},{"location":"documentation/command/#_2","title":"\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b","text":"<p>\u041a\u043e\u043c\u0430\u043d\u0434\u0430 \u043c\u043e\u0436\u0435\u0442 \u0438\u043c\u0435\u0442\u044c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043a\u0430\u043a \u043e\u0431\u044b\u0447\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0432 \u043f\u0438\u0442\u043e\u043d\u0435</p> <pre><code>@bot.command()\ndef hello(name):\nreturn f'Hello, {name}'\n</code></pre> <p>\u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0432\u0441\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0431\u0443\u0434\u0443\u0442 \u0441\u0442\u0440\u043e\u043a\u0430\u043c\u0438 (\u0445\u043e\u0442\u044f \u0431\u044b \u043f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u044d\u0442\u043e \u0441\u0442\u0440\u043e\u043a\u0430)</p> <p>\u0414\u043b\u044f \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u044f \u0438\u043d\u044b\u0445 \u0442\u0438\u043f\u043e\u0432 \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043f\u043e\u0434\u0441\u043a\u0430\u0437\u043a\u0438 \u0442\u0438\u043f\u043e\u0432 (typehints)</p> <p>\u041d\u0430 \u0434\u0430\u043d\u043d\u044b\u0439 \u043c\u043e\u043c\u0435\u043d\u0442 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u044e\u0442\u0441\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0442\u0438\u043f\u044b: <code>str</code>, <code>int</code>, <code>float</code>, <code>dict</code></p> <p>TODO: \u041e\u0431\u044a\u044f\u0441\u043d\u0438\u0442\u044c \u0441\u043b\u043e\u0432\u0430\u0440\u0438</p>"},{"location":"documentation/message/","title":"Message","text":"<p>~~Some description~~</p>"},{"location":"documentation/message/#fields","title":"Fields","text":"<ul> <li><code>date</code>- time.struct_time - sending time of message</li> <li><code>text</code> str</li> <li><code>chat</code> - Chat object, where message was send</li> <li><code>sender</code> - User object, who send the message</li> </ul>"},{"location":"documentation/message/#methods","title":"Methods","text":""},{"location":"documentation/message/#reply","title":"reply","text":""}]}