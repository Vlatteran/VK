import enum
from typing import Callable

from vkpybot.types import Message as Message, User as User


class EventHandler:
    _event_handler: dict[EventType, Callable]
    def __init__(self) -> None: ...

    async def __call__(self, event: EventType, **context: dict): ...

    async def on_message_new(self, message: Message, client_info: dict): ...

    async def on_message_edit(self, message: Message): ...

    async def on_message_reply(self, message: Message): ...

    async def on_message_allow(self, user: User, key: str): ...

    async def on_message_deny(self, user: User): ...

    async def on_message_typing_state(self, state: str, sender: User): ...

    async def on_message_event(self, user: User, **context): ...

    async def on_photo_new(self, photo, **context) -> None: ...

    async def on_photo_comment_new(self, comment, photo_id: int, photo_owner_id: int, **context): ...

    async def on_photo_comment_edit(self, comment, photo_id: int, photo_owner_id: int, **context): ...

    async def on_photo_comment_restore(self, comment, photo_id: int, photo_owner_id: int, **context): ...

    async def on_photo_comment_delete(self, **context) -> None: ...

    async def on_audio_new(self, audio, **context) -> None: ...

    async def on_video_new(self, video, **context) -> None: ...

    async def on_video_comment_new(self, comment, video_id: int, video_owner_id: int, **context): ...

    async def on_video_comment_edit(self, comment, video_id: int, video_owner_id: int, **context): ...

    async def on_video_comment_restore(self, comment, video_id: int, video_owner_id: int, **context): ...

    async def on_video_comment_delete(self, owner_id: int, comment_id: int, user: User, deleter: User,
                                      **context): ...

    async def on_wall_post_new(self, **context) -> None: ...

    async def on_wall_repost(self, **context) -> None: ...

    async def on_wall_reply_new(self, **context) -> None: ...

    async def on_wall_reply_edit(self, **context) -> None: ...

    async def on_wall_reply_restore(self, **context) -> None: ...

    async def on_wall_reply_delete(self, **context) -> None: ...

    async def on_like_add(self, **context) -> None: ...

    async def on_like_remove(self, **context) -> None: ...

    async def on_board_post_new(self, **context) -> None: ...

    async def on_board_post_edit(self, **context) -> None: ...

    async def on_board_post_restore(self, **context) -> None: ...

    async def on_board_post_delete(self, **context) -> None: ...


class EventType(enum.Enum):
    MESSAGE_NEW: int
    MESSAGE_REPLY: int
    MESSAGE_EDIT: int
    MESSAGE_ALLOW: int
    MESSAGE_DENY: int
    MESSAGE_TYPING_STATE: int
    MESSAGE_EVENT: int
    PHOTO_NEW: int
    PHOTO_COMMENT_NEW: int
    PHOTO_COMMENT_EDIT: int
    PHOTO_COMMENT_RESTORE: int
    PHOTO_COMMENT_DELETE: int
    AUDIO_NEW: int
    VIDEO_NEW: int
    VIDEO_COMMENT_NEW: int
    VIDEO_COMMENT_EDIT: int
    VIDEO_COMMENT_RESTORE: int
    VIDEO_COMMENT_DELETE: int
    WALL_POST_NEW: int
    WALL_REPOST: int
    WALL_REPLY_NEW: int
    WALL_REPLY_EDIT: int
    WALL_REPLY_RESTORE: int
    WALL_REPLY_DELETE: int
    LIKE_ADD: int
    LIKE_REMOVE: int
    BOARD_POST_NEW: int
    BOARD_POST_EDIT: int
    BOARD_POST_RESTORE: int
    BOARD_POST_DELETE: int
